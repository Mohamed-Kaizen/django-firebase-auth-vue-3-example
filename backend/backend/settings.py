"""
Django settings for backend project.

Generated by 'django-admin startproject' using Django 3.2.5.

For more information on this file, see
https://docs.djangoproject.com/en/3.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.2/ref/settings/
"""

from pathlib import Path
import firebase_admin

from firebase_admin import credentials

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-0_$(g7v8y@r65d7nr2-2&_vb+-is@%n9mh#6j2n(k^=+r18gaa'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'rest_framework',
    'corsheaders',
    'users',
]

MIDDLEWARE = [
    "django.middleware.security.SecurityMiddleware",
    'corsheaders.middleware.CorsMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'backend.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'backend.wsgi.application'


# Database
# https://docs.djangoproject.com/en/3.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/3.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/3.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.2/howto/static-files/

STATIC_URL = '/static/'

# Default primary key field type
# https://docs.djangoproject.com/en/3.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

AUTH_USER_MODEL = 'users.CustomUser'


REST_FRAMEWORK = {
    "DEFAULT_AUTHENTICATION_CLASSES": (
        "rest_framework.authentication.SessionAuthentication",
        "users.authentication.FireBaseAuth",
    ),
}

CORS_ORIGIN_ALLOW_ALL = True


cred = credentials.Certificate(
    {
        "type": "service_account",
        "project_id": "django-firebaseauth-vue3",
        "private_key_id": "277738c391947628a3ac7330c8737ed001fde328",
        "private_key": "-----BEGIN PRIVATE KEY-----\nMIIEvQIBADANBgkqhkiG9w0BAQEFAASCBKcwggSjAgEAAoIBAQCeaQ3Hb8y53/jY\nEHCaRaPSk5571W/jUescge8Tk0g+7tW6bP48s+/wmclBPMU6mabHKry9haaH3E/6\ngrUfOt3gc4hNp2AtpeQTnSBI8JjKIapjZpIfsx+oJQI4Ffi0sPpaV3ojKr/rujVu\nTF3DQqjzLn+rGhD+7jyXTd9rsB8EMLKR+4ij0LFRCQIkS0Rzz2BN7uDRde75gmC7\n00y85IJNUyGhJOpQUp6LUSdcko56kA1eWL11onABc/ljwkkWv+dfKeMxi9YHCGSh\nOHMn2AjUdgkg0k3s39JNF8Ymh1C4PlN2naeZa4XvDoyHCz49S+x9zB/EWRzeZzT0\n+Q7PFoBtAgMBAAECggEAIH0JP2r1gPWncqDEh09bDvgJm/olTWjioGEhqFEfkxCm\nsuphpg99WUohFYkiJieXJefk97WudtS/bnBaN0J6eOsY/FwkhJguU7t5AJyfqW0I\nJgTGWUwCZRjaAKi47k4Rum+QdB/zZqQ1Cx8MZ9yHDADwXCYncDFqKdnlxY9EfTYw\nw9XVAwdJKhO36j0utODlHTZY1QEJHLjiHDks88dtKkWYNWyoYJKYKhDerM08KUg0\nInP+1lb5Vf0Wk7x7hPvxi9QzPfONELNrX+KIZ14AGJ/LW1ROZikQ/woybRIkdV7Y\ndI+4CqD8oS1XIDz0L+UQGqUaYggI0zzRIRgcUs6FHQKBgQDZCtmbg7CSS4SR4+7q\ns1EeXkFKQaPmLVrcmCwxdpGq+IBkrjrjLeXO5cmQGRkqLcrPaViClgxaxMwbImHe\nkJexvLcQOWZEuB0AW68VnOOyVM5Q2aCsJCc2PGP6MWLy2IRaW6qMUc94lMI5jIT8\nt2/zal9JAiaHPT03uajvpwyVYwKBgQC62AxoL4c278mwzL+Z9Jx3CPZwYvM6zGIM\nX+21HJrunI5G4ZDM2UTlMb9EkjtgyRjdr12R45vNkRk4bGaezAddHyYayidz7yo+\nIqVM+XjLnvM9BxwdbFGzNFCnALr5VptoQEvBUWE2qStF8KNP9nmF7ZhvZGzZfGlj\nEswRAbOj7wKBgQCBGiIcjjXOn5sIyMNJ2kYLQVem2uqqNRpSEzZeab/2KgD9YmHm\n1ltXOXou+67rVvfHbktWyfgpWdxq24XJxMpmz/E4dlwtzjJ6Dw9TVNJgNm/OydT3\n8D1e1odFwHCyMTZxJQuKkfNOL3ZkkwBb7qVp7kElhWDzmuq6JfamLwCeLwKBgFCl\nNd22PfdxUi20gjKySOJ8BNqHaxKC6wMKWLBmc1zwR9zCOVyhnsIKUdMIBwcEZW4x\n5gI1Kqd0rF0VNMnvqHICItFHVfYNUb9V9uEdgIzqw3Qg4Hq2qSDfQLyEbS93uUYr\nEkeTl5EfPWVHs0WtTdCHt9bEktLghyBTGa9xe5cTAoGAFAjlsdv49ucb6BLb6egA\n5v1rXS98eQuo/fptXezZ7TVs00Ff4pXc77xQPyZjF0SDIpR26CNhCh6NeeM9iTwc\nCec8w/3CTOL626F3zaGN+FhI75T4mT1CQkld8yNTGcCZViSASO6zIMDniOgyvpYV\nBgthgIHIKNEMMx7aBG0X1/Y=\n-----END PRIVATE KEY-----\n",
        "client_email": "firebase-adminsdk-jxa68@django-firebaseauth-vue3.iam.gserviceaccount.com",
        "client_id": "116740370295306162731",
        "auth_uri": "https://accounts.google.com/o/oauth2/auth",
        "token_uri": "https://accounts.google.com/o/oauth2/token",
        "auth_provider_x509_cert_url": "https://www.googleapis.com/oauth2/v1/certs",
        "client_x509_cert_url": "https://www.googleapis.com/robot/v1/metadata/x509/firebase-adminsdk-jxa68%40django-firebaseauth-vue3.iam.gserviceaccount.com",
    }
)

FIREBASE_APP = firebase_admin.initialize_app(cred)